syntax = "proto3";

// Message that vehicle sends every second.
message LocationMessage {
    VehicleDescriptor vehicle_descriptor = 1;
    Position position = 2;
    int64 timestamp = 3; // milliseconds since epoch
    DoorOpeningStatus door_status = 4;
    StopButtonStatus stop_button_status = 5;
}

// This enum describes the status of the door of a bus.
enum DoorOpeningStatus {
    CLOSED = 0;
    OPEN = 1;
    NO_DATA = 2;
}

// This enum describes if the stop button is activated within the bus (that means that the bus will stop at it's next stop)
enum StopButtonStatus {
    NOT_ACTIVATED = 0;
    ACTIVATED = 1;
    NO_DATA = 2;
}

message Position {
    float latitude = 1; // WGS 84
    float longitude = 2; // WGS 84
    float accuracy = 3;

    float speed = 4; // speed in m/s
    float bearing = 5; // bearing in degrees
    // the odometer is always  used relatively, the odometer can be the total distance a vehicle has traveled in
    // it's livetime, this day or during the trip it's currently on (ressetting more often is not allowed) 
    int64 odometer = 6; // in meters
}

// Fields to identify vehicle
message VehicleDescriptor {
    string data_owner_code = 1; // required
    
    // One of block_code and vehicle_number is required
    int32 block_code = 2;
    int32 vehicle_number = 3;
}
